worker_processes 1;

events {
  worker_connections 1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile        on;
  keepalive_timeout  65;

    # upstream client {
    #     server client;
    # }

    # upstream api {
    #     server api;
    # }

    # proxy_cache_path /etc/nginx/cache levels=1:2 keys_zone=chyra_cache:10m max_size=10g inactive=60m use_temp_path=off;

  server {
    listen 80;

    location / {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
      add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With';
      proxy_pass http://client:80;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/ {
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;

      if ($request_method = OPTIONS) {
          add_header 'Access-Control-Allow-Origin' '*' always;
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
          add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
          return 204;
      }

      proxy_pass http://api:8080;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /admin/ {
      # Future Admin interface
      return 404; # Temporary if you haven't deployed admin
    }
  }
}