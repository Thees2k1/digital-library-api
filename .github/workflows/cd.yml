name: Backend CD

on:
  workflow_run:
    workflows: ['Backend CI'] # Change this to match the exact name of your CI workflow
    types:
      - completed
    branches:
      - main
  repository_dispatch:
    types: [client_rebuilt]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production # This gives access to production secrets
    timeout-minutes: 30

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Pull Docker Image and Deploy Services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e

            if [ ! -d ~/chyra-library/digital-library-api ]; then
              mkdir -p ~/chyra-library
              cd ~/chyra-library
              git clone https://github.com/Thees2k1/digital-library-api.git
            else
              cd ~/chyra-library/digital-library-api
              git pull origin main
            fi

            echo "PORT=8080" > .env
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
            echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
            echo "POSTGRES_DB=${{ vars.POSTGRES_DB }}" >> .env
            echo "REDIS_URL=${{ vars.REDIS_URL }}" >> .env
            echo "ACCESS_TOKEN_SECRET=${{ vars.ACCESS_TOKEN_SECRET }}" >> .env
            echo "MEILISEARCH_HOST=${{ vars.VITE_MEILISEARCH_HOST }}" >> .env
            echo "MEILISEARCH_API_KEY=${{ secrets.VITE_MEILISEARCH_API_KEY }}" >> .env
            echo "MEILI_MASTER_KEY=${{ secrets.VITE_MEILISEARCH_API_KEY }}" >> .env

            # Pull the latest images
            docker compose pull

            # Bring down the existing containers and bring up new ones
            docker compose down
            docker compose up -d
